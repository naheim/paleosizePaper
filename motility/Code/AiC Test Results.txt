
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[R.app GUI 1.70 (7521) x86_64-apple-darwin15.6.0]

[History restored from /Users/i818433/.Rapp.history]

> library(paleoTS)
> 
> sizeData <- read.delim(file="https://raw.githubusercontent.com/naheim/paleosizePaper/master/rawDataFiles/bodySizes.txt")
> timescale <- read.delim(file="https://raw.githubusercontent.com/naheim/paleosizePaper/master/rawDataFiles/timescale.txt")
> n.bins <- nrow(timescale)
> 
> my.mean <- vector(mode="numeric", length=n.bins)
> my.var <- vector(mode="numeric", length=n.bins)
> my.n <- vector(mode="numeric", length=n.bins)
> my.time <- timescale$age_bottom 
> names(my.var) <- timescale$interval_name
> names(my.n) <- timescale$interval_name
> names(my.time) <- timescale$interval_name
> motility1 <- sizeData[sizeData[,"motility"]==1 & !is.na(sizeData$motility),]
> 
> for(i in 1:n.bins) {
+ temp.data <- log10(motility1$max_vol[motility1$fad_age > timescale$age_top[i] & motility1$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data) }
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last") # check my.ts for NA values and change mean --> var accordingly
> fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 100, method = Joint]

              logL K       AICc Akaike.wt
GRW       7.083586 3  -7.917172     0.582
URW       5.690415 2  -7.257119     0.418
Stasis -153.240150 2 310.604011     0.000
> motile <- sizeData[(sizeData[,"motility"]==1 | sizeData[,"motility"]==2) & !is.na(sizeData$motility),]
> 
> for(i in 1:n.bins) {
+ temp.data <- log10(motile$max_vol[motility1$fad_age > timescale$age_top[i] & motile$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data) }
There were 50 or more warnings (use warnings() to see the first 50)
> 
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last") # check my.ts for NA values and change mean --> var accordingly
> fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 100, method = Joint]

           logL K      AICc Akaike.wt
GRW    185.2546 3 -364.2591     0.426
URW    184.4888 2 -364.8539     0.574
Stasis  98.2195 2 -192.3153     0.000
> motility2 <- sizeData[sizeData[,"motility"]==2 & !is.na(sizeData$motility),]
> for(i in 1:n.bins) {
+ temp.data <- log10(motile$max_vol[motile$fad_age > timescale$age_top[i] & motile$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data) }
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last"); fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 100, method = Joint]

             logL K       AICc Akaike.wt
GRW      1.452767 3   3.344466     0.317
URW      1.157693 2   1.808326     0.683
Stasis -83.547837 2 171.219386     0.000
> nonmotile <- sizeData[(sizeData[,"motility"]!=1 | sizeData[,"motility"]!=2) & !is.na(sizeData$motility),]
> for(i in 1:n.bins) {
+ temp.data <- log10(nonmotile$max_vol[nonmotile$fad_age > timescale$age_top[i] & nonmotile$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data) }
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last"); fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 100, method = Joint]

            logL K      AICc Akaike.wt
GRW     52.51127 3 -98.77254     0.695
URW     50.62628 2 -97.12885     0.305
Stasis -83.26843 2 170.66058     0.000
my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last"); fit3models(my.ts, method="Joint", pool=FALSE)
> motility2 <- sizeData[sizeData[,"motility"]==2 & !is.na(sizeData$motility),]
> for(i in 1:n.bins) {
+ temp.data <- log10(motility2$max_vol[motility2$fad_age > timescale$age_top[i] & motility2$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data) }
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last"); fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 100, method = Joint]

            logL K      AICc Akaike.wt
GRW     18.90797 3 -31.56593      0.39
URW     18.29174 2 -32.45977      0.61
Stasis -96.22197 2 196.56764      0.00
> motility3 <- sizeData[sizeData[,"motility"]==3 & !is.na(sizeData$motility),]
> for(i in 1:n.bins) {
+ temp.data <- log10(motility3$max_vol[motility3$fad_age > timescale$age_top[i] & motility3$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data) }
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last"); fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 96, method = Joint]

            logL K      AICc Akaike.wt
GRW     42.43473 3 -78.60860     0.507
URW     41.33989 2 -78.55074     0.493
Stasis -37.02372 2  78.17647     0.000
> motility4 <- sizeData[sizeData[,"motility"]==4 & !is.na(sizeData$motility),]
> for(i in 1:n.bins) {
+ temp.data <- log10(motility4$max_vol[motility4$fad_age > timescale$age_top[i] & motility4$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data) }
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last"); fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 100, method = Joint]

             logL K       AICc Akaike.wt
GRW      6.819304 3  -7.388608     0.774
URW      4.526888 2  -4.930065     0.226
Stasis -87.694341 2 179.512394     0.000
> motility5 <- sizeData[sizeData[,"motility"]==5 & !is.na(sizeData$motility),]
> for(i in 1:n.bins) {
+ temp.data <- log10(motility5$max_vol[motility5$fad_age > timescale$age_top[i] & motility5$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data) }
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last"); fit3models(my.ts, method="Joint", pool=FALSE)
Error in if (p0[3] <= 0) p0[3] <- 1e-07 : 
  missing value where TRUE/FALSE needed
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.var)], vv=my.var[!is.na(my.var)], nn=my.n[!is.na(my.var)], tt=my.time[!is.na(my.var)], oldest="last"); fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 91, method = Joint]

             logL K      AICc Akaike.wt
GRW      5.663040 3 -5.050218     0.257
URW      5.656783 2 -7.177202     0.743
Stasis -34.640309 2 73.416981     0.000
> motility6 <- sizeData[sizeData[,"motility"]==6 & !is.na(sizeData$motility),]
> for(i in 1:n.bins) {
+ temp.data <- log10(motility6$max_vol[motility6$fad_age > timescale$age_top[i] & motility6$lad_age < timescale$age_bottom[i]])
+ my.mean[i] <- mean(temp.data)
+ my.var[i] <- var(temp.data)
+ my.n[i] <- length(temp.data) }
> my.ts <- as.paleoTS(mm=my.mean[!is.na(my.mean)], vv=my.var[!is.na(my.mean)], nn=my.n[!is.na(my.mean)], tt=my.time[!is.na(my.mean)], oldest="last"); fit3models(my.ts, method="Joint", pool=FALSE)

Comparing 3 models [n = 100, method = Joint]

             logL K      AICc Akaike.wt
GRW      42.11428 3 -77.97855     0.802
URW      39.65163 2 -75.17956     0.198
Stasis -103.48660 2 211.09691     0.000
objc[85683]: Class FIFinderSyncExtensionHost is implemented in both /System/Library/PrivateFrameworks/FinderKit.framework/Versions/A/FinderKit (0x7fffa29e5c90) and /System/Library/PrivateFrameworks/FileProvider.framework/OverrideBundles/FinderSyncCollaborationFileProviderOverride.bundle/Contents/MacOS/FinderSyncCollaborationFileProviderOverride (0x10a331cd8). One of the two will be used. Which one is undefined.
> 