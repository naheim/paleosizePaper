 # Call in data & subset data into respective feeding levels
source("https://github.com/naheim/paleosizePaper/raw/master/sharedCode/functions.r")
sizeData <- read.delim(file="https://raw.githubusercontent.com/naheim/paleosizePaper/master/rawDataFiles/bodySizes.txt")
timescale <- read.delim(file="https://raw.githubusercontent.com/naheim/paleosizePaper/master/rawDataFiles/timescale.txt")
#source( '/Users/syamunac/R_Data/functions.r')
#sizeData <- read.delim('/Users/syamunac/R_Data/bodySizes.txt')
#timescale <- read.delim('/Users/syamunac/R_Data/timescale.txt')
sizeData$log10max_vol <- log10(sizeData$max_vol)
 feeding1 <- sizeData[sizeData[,"feeding"]==1 & !is.na(sizeData$feeding),]
 feeding2 <- sizeData[sizeData[,"feeding"]==2 & !is.na(sizeData$feeding),]  
 feeding3 <- sizeData[sizeData[,"feeding"]==3 & !is.na(sizeData$feeding),]  
 feeding4 <- sizeData[sizeData[,"feeding"]==4 & !is.na(sizeData$feeding),]  
 feeding5 <- sizeData[sizeData[,"feeding"]==5& !is.na(sizeData$feeding),]  
 feeding6 <- sizeData[sizeData[,"feeding"]==6& !is.na(sizeData$feeding),]  
 myCol <- c("#ff5640","#ffd900","#00ffd7","#ee92ed","#ff00ff","#0000ff")

 #FIGURE: Body Size Over Time - Color Coded
 time.plot.mult(nrow=2, ncol=3,las=1, top.mar=2.5)
 par(las=1)

# For each feeding level, draw segment (stratigraphic ranges) & mean line
plot(1:10,type='n',xlim=c(541,0),xaxt='n',xlab='',ylim=c(-2,12),ylab=expression(paste("Biovolume (log"[10]," mm"^3*")")))
 abline(v = c(65, 200, 251.2, 358,  443.8), col="black",lty=5)
segments(feeding1$fad_age,feeding1$log10max_vol,feeding1$lad_age,feeding1$log10max_vol, col="#ff5640")
 title(main="Suspension Feeder")
 meanVector <- vector(mode='numeric', length=nrow(timescale))
 for(i in 1:nrow(timescale)) { 
  	meanVector[i] <- mean(feeding1$log10max_vol[feeding1$fad_age > timescale$age_top[i] & feeding1$lad_age < timescale$age_bottom[i]]) }
 lines(x=timescale$age_mid,y=meanVector, col="black", lwd=2.5)
 plot(1:10,type='n',xlim=c(541,0),xaxt='n',xlab='',ylim=c(-2,12),ylab=expression(paste("Biovolume (log"[10]," mm"^3*")")))
segments(feeding2$fad_age,feeding2$log10max_vol,feeding2$lad_age,feeding2$log10max_vol, col="#ffd900")
 abline(v = c(65, 200, 251.2, 358, 443.8), col="black",lty=5)
 meanVector <- vector(mode='numeric', length=nrow(timescale))
for(i in 1:nrow(timescale)) { 
  	meanVector[i] <- mean(feeding2$log10max_vol[feeding2$fad_age > timescale$age_top[i] & feeding2$lad_age < timescale$age_bottom[i]]) }
lines(x=timescale$age_mid,y=meanVector, col="black", lwd=2.5)
 title(main="Surface Deposit")
plot(1:10,type='n',xlim=c(541,0),xaxt='n',xlab='',ylim=c(-2,12),ylab=expression(paste("Biovolume (log"[10]," mm"^3*")")))
segments(feeding3$fad_age,feeding3$log10max_vol,feeding3$lad_age,feeding3$log10max_vol, col="#00ffd7")
 title(main="Mining")
 abline(v = c(65, 200, 251.2, 358, 443.8), col="black",lty=5)
 meanVector <- vector(mode='numeric', length=nrow(timescale))
for(i in 1:nrow(timescale)) { 
 	meanVector[i] <- mean(feeding3$log10max_vol[feeding3$fad_age > timescale$age_top[i] & feeding3$lad_age < timescale$age_bottom[i]]) }
lines(x=timescale$age_mid,y=meanVector, col="black", lwd=2.5)

plot(1:10,type='n',xlim=c(541,0),xaxt='n',xlab='',ylim=c(-2,12),ylab=expression(paste("Biovolume (log"[10]," mm"^3*")")))
segments(feeding4$fad_age,feeding4$log10max_vol,feeding4$lad_age,feeding4$log10max_vol, col="#ee92ed")
abline(v = c(65, 200, 251.2, 358, 443.8), col="black",lty=5)
title(main="Grazing")
 meanVector <- vector(mode='numeric', length=nrow(timescale))
for(i in 1:nrow(timescale)) { 
 	meanVector[i] <- mean(feeding4$log10max_vol[feeding4$fad_age > timescale$age_top[i] & feeding4$lad_age < timescale$age_bottom[i]]) }
lines(x=timescale$age_mid,y=meanVector, col="black", lwd=2.5)

plot(1:10,type='n',xlim=c(541,0),xaxt='n',xlab='',ylim=c(-2,12),ylab=expression(paste("Biovolume (log"[10]," mm"^3*")")))
segments(feeding5$fad_age,feeding5$log10max_vol,feeding5$lad_age,feeding5$log10max_vol, col="#ff00ff")
abline(v = c(65, 200, 251.2, 358,  443.8), col="black",lty=5)
title(main="Predatory")
meanVector <- vector(mode='numeric', length=nrow(timescale))
for(i in 1:nrow(timescale)) { 
 	meanVector[i] <- mean(feeding5$log10max_vol[feeding5$fad_age > timescale$age_top[i] & feeding5$lad_age < timescale$age_bottom[i]]) }
lines(x=timescale$age_mid,y=meanVector, col="black", lwd=2.5)

plot(1:10,type='n',xlim=c(541,0),xaxt='n',xlab='',ylim=c(-2,12),ylab=expression(paste("Biovolume (log"[10]," mm"^3*")")))
segments(feeding6$fad_age,feeding6$log10max_vol,feeding6$lad_age,feeding6$log10max_vol, col="#0000ff")
abline(v = c(65, 200, 251.2, 358,  443.8), col="black",lty=5)
title(main="Other")
meanVector <- vector(mode='numeric', length=nrow(timescale))
for(i in 1:nrow(timescale)) { 
 	meanVector[i] <- mean(feeding6$log10max_vol[feeding6$fad_age > timescale$age_top[i] & feeding6$lad_age < timescale$age_bottom[i]]) }
lines(x=timescale$age_mid,y=meanVector, col="black", lwd=2.5)
